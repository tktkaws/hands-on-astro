---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
interface Props {
	title: string;
	description: string;
}
const { title, description } = Astro.props;
---

<!doctype html>
<html lang="ja">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Header />
		<main class="transition-fade">
			<slot />
		</main>
		<Footer />
	</body>
</html>

<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background-size: 224px;
	}
	body {
		background-color: rgb(235, 235, 235);
		background-color: #fff;
		background-color: rgb(248 248 248);
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	html.is-changing .transition-fade {
		transition: 0.2s;
		opacity: 1;
		transform: translateY(0px);
	}
	html.is-animating .transition-fade {
		opacity: 0;
		transform: translateY(20px);
	}

</style>

<script>
	console.clear();
	import Swup from "swup";
	import FragmentPlugin from "@swup/fragment-plugin";

	const swup = new Swup({
		containers: ["#swup"],
		plugins: [
			new FragmentPlugin({
				debug: true,
				rules: [
					{
						from: "/items/:filter?",
						to: "/items/:filter?",
						containers: ["#items"],
					},
				],
			}),
		],
	});

	function setTransitionDelays() {
		document.querySelectorAll(".list_item").forEach((el, i) => {
			el.style.transitionDelay = i * 20 + "ms";
		});
	}
	setTransitionDelays();
	swup.hooks.on("page:view", setTransitionDelays);
</script>
